{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///../dist/ngx-font-picker.es5.js.pre-build-optimizer.js","webpack:///./src/app/app.module.ts.pre-build-optimizer.js","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/app.component.css.shim.ngstyle.js.pre-build-optimizer.js","webpack:///./src/app/app.component.html","webpack:///./src/app/app.module.ngfactory.js.pre-build-optimizer.js","webpack:///./src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","__webpack_require__","d","__webpack_exports__","FONT_PICKER_CONFIG","Font","FontPickerComponent","FontPickerDirective","FontPickerModule","FontPickerService","FontSizePipe","FontStylesPipe","StatefulSlicePipe","webfontloader__WEBPACK_IMPORTED_MODULE_0__","rxjs__WEBPACK_IMPORTED_MODULE_1__","rxjs__WEBPACK_IMPORTED_MODULE_2__","rxjs_operators__WEBPACK_IMPORTED_MODULE_3__","rxjs_operators__WEBPACK_IMPORTED_MODULE_4__","rxjs_operators__WEBPACK_IMPORTED_MODULE_5__","_angular_forms__WEBPACK_IMPORTED_MODULE_6__","_angular_core__WEBPACK_IMPORTED_MODULE_7__","props","this","size","style","family","files","styles","prototype","getStyles","font-size","font-style","includes","font-family","font-weight","isNaN","Number","slice","http","_config","apiKey","baseUrl","loadFont","font","Object","google","families","console","warn","getAllFonts","sort","requestUrl","concat","get","pipe","handleHttpError","getRequestedFont","error","errMsg","message","status","cdRef","elRef","service","useRootViewContainer","safeFonts","fontAmount","loadedFonts","presetFonts","googleFonts","currentFonts","dialogArrowSize","dialogArrowOffset","searchTerm","renderMore","config","suppressScrollX","wheelPropagation","loading","selectedFont","presetVisible","handleEsc","event","open","fpDialogDisplay","onCancelSelect","handleEnter","onAcceptSelect","ngOnInit","_this","subscribe","loadMoreFonts","valueChanges","text","listLabel","fpResultsLabel","fpPopularLabel","searchGoogleFonts","testContainer","document","createElement","innerHTML","Array","join","cssText","listenerResize","onResize","listenerMouseDown","onMouseDown","openFontPicker","trackFont","index","toString","setDialog","instance","elementRef","fpUseRootViewContainer","defaultFont","fpWidth","fpHeight","fpSizeSelect","fpStyleSelect","fpPosition","fpPositionOffset","fpPositionRelativeToArrow","fpSearchText","fpLoadingText","fpPresetLabel","fpPresetFonts","fpPresetNotice","fpCancelButton","fpCancelButtonText","fpCancelButtonClass","fpUploadButton","fpUploadButtonText","fpUploadButtonClass","directiveInstance","directiveElementRef","updateDialog","fonts","items","map","variants","searchFont","findFont","initialFont","loadGoogleFonts","openSans","find","setCurrentFonts","getPresetFonts","parseInt","autoWidth","reset","disabled","length","setDialogPosition","setValue","window","addEventListener","closeFontPicker","removeEventListener","isFontAvailable","testWidth","fontFamily","body","appendChild","clientWidth","removeChild","width","forEach","fontClass","push","target","initialFonts","markForCheck","setTimeout","scrollbar","directiveRef","scrollToY","searchVal","exactMatch","findFonts","fullmatchFonts","candidateFonts","toLowerCase","indexOf","moreFonts","update","detectChanges","x","value","searchResult","isDescendant","parent","child","node","parentNode","createDialogBox","element","offset","top","getBoundingClientRect","pageYOffset","left","pageXOffset","offsetWidth","height","offsetHeight","position","transform","transformNode","nativeElement","dialogHeight","dialogElement","tagName","getComputedStyle","getPropertyValue","boxDirective","HTMLUnknownElement","boxParent","arrowTop","onUploadFont","stopPropagation","uploadFont","fontChanged","onSelectFont","onSearchReset","onFontSizeChange","onFontStyleChange","str","injector","resolver","appRef","vcRef","fpFallbackFont","fpAutoLoad","fontPickerUpload","fontPickerChange","onClick","toggleDialog","fontPicker","ngOnChanges","changes","emit","openDialog","dialog","closeDialog","appInstance","componentTypes","viewContainerRef","compFactory","resolveComponentFactory","fromResolvedProviders","parentInjector","createComponent","replace","lookup","100","200","300","400","500","600","700","800","900","search","slicedArray","previousArrayRef","previousEndValue","arr","start","end","Éµ0","AppModule","app_component_AppComponent","AppComponent","_presetFonts","ngx_font_picker_es5","sizeSelect","styleSelect","togglePresetFonts","toggleExtraOptions","RenderType_AppComponent","core","encapsulation","data","View_AppComponent_0","_l","flex_es5","core_es5","fxLayout","common","extended_es5","platform_browser","ngStyle.lt-sm","fxLayout.gt-xs","fxLayoutAlign","fxFlex","_v","en","$event","ad","_co","component","ngStyle","_ck","currVal_24","currVal_25","View_AppComponent_Host_0","AppComponentNgFactory","AppModuleNgFactory","ngx_font_picker_ngfactory","p0_0","p0_1","p0_2","p1_0","p2_0","p2_1","p2_2","p2_3","fesm5_forms","bidi_es5","grid_es5","flex_layout_es5","ngx_perfect_scrollbar_es5","bootstrapModuleFactory"],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","import { load } from 'webfontloader';\nimport { of, Subject } from 'rxjs';\nimport { catchError, debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { InjectionToken, Injectable, Inject, Component, ViewEncapsulation, ChangeDetectorRef, ElementRef, ViewChild, HostListener, ReflectiveInjector, Directive, Injector, ComponentFactoryResolver, ApplicationRef, ViewContainerRef, Input, Output, EventEmitter, Pipe, NgModule } from '@angular/core';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar FONT_PICKER_CONFIG = new InjectionToken('FONT_PICKER_CONFIG');\nvar GoogleFontsInterface = /** @class */ (function () {\n    function GoogleFontsInterface() {\n    }\n    return GoogleFontsInterface;\n}());\nvar Font = /** @class */ (function () {\n    function Font(props) {\n        this.size = '16px';\n        this.style = 'regular';\n        this.family = 'monospace';\n        this.files = null;\n        this.styles = ['regular'];\n        if (props) {\n            this.size = props.size || '16px';\n            this.style = props.style || 'regular';\n            this.family = props.family || 'monospace';\n            this.files = props.files || null;\n            this.styles = props.styles || ['regular'];\n        }\n    }\n    /**\n     * @return {?}\n     */\n    Font.prototype.getStyles = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            'font-size': this.size || '16px',\n            'font-style': this.style.includes('italic') ?\n                'italic' : 'normal',\n            'font-family': this.family || 'monospace',\n            'font-weight': isNaN(Number(this.style.slice(0, 3))) ?\n                'normal' : this.style.slice(0, 3)\n        };\n    };\n    return Font;\n}());\nvar FontPickerConfig = /** @class */ (function () {\n    function FontPickerConfig(config) {\n        if (config === void 0) { config = {}; }\n        this.apiKey = '';\n        this.assign(config);\n    }\n    /**\n     * @param {?=} config\n     * @return {?}\n     */\n    FontPickerConfig.prototype.assign = /**\n     * @param {?=} config\n     * @return {?}\n     */\n    function (config) {\n        if (config === void 0) { config = {}; }\n        for (var key in config) {\n            this[key] = config[key];\n        }\n    };\n    return FontPickerConfig;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar FontPickerService = /** @class */ (function () {\n    function FontPickerService(http, _config) {\n        this.http = http;\n        this._config = _config;\n        this.apiKey = '';\n        this.baseUrl = 'https://www.googleapis.com/webfonts/v1/webfonts';\n        this.apiKey = _config.apiKey || '';\n    }\n    /**\n     * Loads the given font from Google Web Fonts.\n     */\n    /**\n     * Loads the given font from Google Web Fonts.\n     * @param {?} font\n     * @return {?}\n     */\n    FontPickerService.prototype.loadFont = /**\n     * Loads the given font from Google Web Fonts.\n     * @param {?} font\n     * @return {?}\n     */\n    function (font) {\n        try {\n            load({\n                google: {\n                    families: [font.family + ':' + font.style]\n                }\n            });\n        }\n        catch (e) {\n            console.warn('Failed to load the font:', font);\n        }\n    };\n    /**\n     * Returns list of all fonts with given sort option:\n     * date || alpha || style ||Â trending || popularity\n     */\n    /**\n     * Returns list of all fonts with given sort option:\n     * date || alpha || style ||Â trending || popularity\n     * @param {?} sort\n     * @return {?}\n     */\n    FontPickerService.prototype.getAllFonts = /**\n     * Returns list of all fonts with given sort option:\n     * date || alpha || style ||Â trending || popularity\n     * @param {?} sort\n     * @return {?}\n     */\n    function (sort) {\n        if (!this.apiKey) {\n            return of(null);\n        }\n        else {\n            /** @type {?} */\n            var requestUrl = this.baseUrl + '?key=' + this.apiKey;\n            if (sort) {\n                requestUrl = requestUrl.concat('&sort=' + sort);\n            }\n            return (/** @type {?} */ (this.http.get(requestUrl).pipe(catchError(this.handleHttpError))));\n        }\n    };\n    /**\n     * Returns font object for the requested font family.\n     */\n    /**\n     * Returns font object for the requested font family.\n     * @param {?} family\n     * @return {?}\n     */\n    FontPickerService.prototype.getRequestedFont = /**\n     * Returns font object for the requested font family.\n     * @param {?} family\n     * @return {?}\n     */\n    function (family) {\n        /** @type {?} */\n        var requestUrl = 'https://fonts.googleapis.com/css?family=' + family;\n        return (/** @type {?} */ (this.http.get(requestUrl).pipe(catchError(this.handleHttpError))));\n    };\n    /**\n     * Handler method for all possible http request errors.\n     */\n    /**\n     * Handler method for all possible http request errors.\n     * @private\n     * @param {?} error\n     * @return {?}\n     */\n    FontPickerService.prototype.handleHttpError = /**\n     * Handler method for all possible http request errors.\n     * @private\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        console.error(error);\n        /** @type {?} */\n        var errMsg = (error.error instanceof Error) ?\n            error.error.message : (error.status || 'Unknown error');\n        return of(errMsg);\n    };\n    FontPickerService.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    FontPickerService.ctorParameters = function () { return [\n        { type: HttpClient },\n        { type: undefined, decorators: [{ type: Inject, args: [FONT_PICKER_CONFIG,] }] }\n    ]; };\n    return FontPickerService;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar FontPickerComponent = /** @class */ (function () {\n    function FontPickerComponent(cdRef, elRef, service) {\n        this.cdRef = cdRef;\n        this.elRef = elRef;\n        this.service = service;\n        this.useRootViewContainer = false;\n        this.safeFonts = [\n            'Arial',\n            'sans-serif',\n            'Times',\n            'serif',\n            'Courier',\n            'monospace'\n        ];\n        this.fontAmount = 10;\n        this.loadedFonts = 0;\n        this.presetFonts = [];\n        this.googleFonts = [];\n        this.currentFonts = [];\n        this.dialogArrowSize = 10;\n        this.dialogArrowOffset = 15;\n        this.searchTerm = new FormControl('');\n        this.renderMore = new Subject();\n        this.config = {\n            suppressScrollX: true,\n            wheelPropagation: false\n        };\n        this.loading = true;\n        this.selectedFont = false;\n        this.presetVisible = true;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    FontPickerComponent.prototype.handleEsc = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        if (this.open && this.fpDialogDisplay === 'popup') {\n            this.onCancelSelect(event);\n        }\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    FontPickerComponent.prototype.handleEnter = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        if (this.open && this.fpDialogDisplay === 'popup') {\n            this.onAcceptSelect(event);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    FontPickerComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.renderMore.pipe(debounceTime(150)).subscribe((/**\n         * @return {?}\n         */\n        function () { return _this.loadMoreFonts(); }));\n        this.searchTerm.valueChanges.pipe(debounceTime(500), distinctUntilChanged()).subscribe((/**\n         * @param {?} text\n         * @return {?}\n         */\n        function (text) {\n            if (!text) {\n                _this.presetVisible = true;\n                _this.listLabel = _this.fpPopularLabel;\n            }\n            else {\n                _this.presetVisible = false;\n                _this.listLabel = _this.fpResultsLabel;\n            }\n            _this.searchGoogleFonts(text);\n        }));\n        this.testContainer = document.createElement('span');\n        this.testContainer.innerHTML = Array(100).join('wi');\n        this.testContainer.style.cssText = [\n            'position: absolute',\n            'left: -99999px',\n            'width: auto',\n            'font-size: 128px'\n        ].join(' !important;');\n        this.listenerResize = (/**\n         * @return {?}\n         */\n        function () { return _this.onResize(); });\n        this.listenerMouseDown = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) { return _this.onMouseDown(event); });\n        this.openFontPicker();\n    };\n    /**\n     * @param {?} index\n     * @param {?} font\n     * @return {?}\n     */\n    FontPickerComponent.prototype.trackFont = /**\n     * @param {?} index\n     * @param {?} font\n     * @return {?}\n     */\n    function (index, font) {\n        return font.family || index.toString();\n    };\n    /**\n     * @param {?} instance\n     * @param {?} elementRef\n     * @param {?} fpUseRootViewContainer\n     * @param {?} defaultFont\n     * @param {?} fpWidth\n     * @param {?} fpHeight\n     * @param {?} fpDialogDisplay\n     * @param {?} fpSizeSelect\n     * @param {?} fpStyleSelect\n     * @param {?} fpPosition\n     * @param {?} fpPositionOffset\n     * @param {?} fpPositionRelativeToArrow\n     * @param {?} fpSearchText\n     * @param {?} fpLoadingText\n     * @param {?} fpPopularLabel\n     * @param {?} fpResultsLabel\n     * @param {?} fpPresetLabel\n     * @param {?} fpPresetFonts\n     * @param {?} fpPresetNotice\n     * @param {?} fpCancelButton\n     * @param {?} fpCancelButtonText\n     * @param {?} fpCancelButtonClass\n     * @param {?} fpUploadButton\n     * @param {?} fpUploadButtonText\n     * @param {?} fpUploadButtonClass\n     * @return {?}\n     */\n    FontPickerComponent.prototype.setDialog = /**\n     * @param {?} instance\n     * @param {?} elementRef\n     * @param {?} fpUseRootViewContainer\n     * @param {?} defaultFont\n     * @param {?} fpWidth\n     * @param {?} fpHeight\n     * @param {?} fpDialogDisplay\n     * @param {?} fpSizeSelect\n     * @param {?} fpStyleSelect\n     * @param {?} fpPosition\n     * @param {?} fpPositionOffset\n     * @param {?} fpPositionRelativeToArrow\n     * @param {?} fpSearchText\n     * @param {?} fpLoadingText\n     * @param {?} fpPopularLabel\n     * @param {?} fpResultsLabel\n     * @param {?} fpPresetLabel\n     * @param {?} fpPresetFonts\n     * @param {?} fpPresetNotice\n     * @param {?} fpCancelButton\n     * @param {?} fpCancelButtonText\n     * @param {?} fpCancelButtonClass\n     * @param {?} fpUploadButton\n     * @param {?} fpUploadButtonText\n     * @param {?} fpUploadButtonClass\n     * @return {?}\n     */\n    function (instance, elementRef, fpUseRootViewContainer, defaultFont, fpWidth, fpHeight, fpDialogDisplay, fpSizeSelect, fpStyleSelect, fpPosition, fpPositionOffset, fpPositionRelativeToArrow, fpSearchText, fpLoadingText, fpPopularLabel, fpResultsLabel, fpPresetLabel, fpPresetFonts, fpPresetNotice, fpCancelButton, fpCancelButtonText, fpCancelButtonClass, fpUploadButton, fpUploadButtonText, fpUploadButtonClass) {\n        var _this = this;\n        this.listLabel = fpLoadingText;\n        this.directiveInstance = instance;\n        this.directiveElementRef = elementRef;\n        this.useRootViewContainer = fpUseRootViewContainer;\n        this.updateDialog(defaultFont, fpWidth, fpHeight, fpDialogDisplay, fpSizeSelect, fpStyleSelect, fpPosition, fpPositionOffset, fpPositionRelativeToArrow, fpSearchText, fpLoadingText, fpPopularLabel, fpResultsLabel, fpPresetLabel, fpPresetFonts, fpPresetNotice, fpCancelButton, fpCancelButtonText, fpCancelButtonClass, fpUploadButton, fpUploadButtonText, fpUploadButtonClass);\n        this.service.getAllFonts('popularity').subscribe((/**\n         * @param {?} fonts\n         * @return {?}\n         */\n        function (fonts) {\n            _this.loading = false;\n            if (fonts) {\n                if (fonts.items) {\n                    _this.googleFonts = fonts.items.map((/**\n                     * @param {?} font\n                     * @return {?}\n                     */\n                    function (font) {\n                        return new Font({\n                            files: font.files,\n                            family: font.family,\n                            styles: font.variants\n                        });\n                    }));\n                }\n                // Find styles for initial font\n                /** @type {?} */\n                var searchFont = _this.findFont(_this.initialFont.family, true);\n                if (searchFont) {\n                    _this.font.files = searchFont.files;\n                    _this.font.styles = searchFont.styles;\n                    _this.loadGoogleFonts([_this.font]);\n                }\n                // Load Open Sans if available\n                /** @type {?} */\n                var openSans = _this.googleFonts.find((/**\n                 * @param {?} font\n                 * @return {?}\n                 */\n                function (font) { return font.family === 'Open sans'; }));\n                if (openSans) {\n                    _this.loadGoogleFonts([openSans]);\n                }\n                _this.setCurrentFonts(_this.getPresetFonts().concat(_this.googleFonts));\n            }\n            else {\n                _this.setCurrentFonts(_this.getPresetFonts());\n            }\n        }), (/**\n         * @param {?} error\n         * @return {?}\n         */\n        function (error) { return console.error(error); }));\n    };\n    /**\n     * @param {?} font\n     * @param {?} fpWidth\n     * @param {?} fpHeight\n     * @param {?} fpDialogDisplay\n     * @param {?} fpSizeSelect\n     * @param {?} fpStyleSelect\n     * @param {?} fpPosition\n     * @param {?} fpPositionOffset\n     * @param {?} fpPositionRelativeToArrow\n     * @param {?} fpSearchText\n     * @param {?} fpLoadingText\n     * @param {?} fpPopularLabel\n     * @param {?} fpResultsLabel\n     * @param {?} fpPresetLabel\n     * @param {?} fpPresetFonts\n     * @param {?} fpPresetNotice\n     * @param {?} fpCancelButton\n     * @param {?} fpCancelButtonText\n     * @param {?} fpCancelButtonClass\n     * @param {?} fpUploadButton\n     * @param {?} fpUploadButtonText\n     * @param {?} fpUploadButtonClass\n     * @return {?}\n     */\n    FontPickerComponent.prototype.updateDialog = /**\n     * @param {?} font\n     * @param {?} fpWidth\n     * @param {?} fpHeight\n     * @param {?} fpDialogDisplay\n     * @param {?} fpSizeSelect\n     * @param {?} fpStyleSelect\n     * @param {?} fpPosition\n     * @param {?} fpPositionOffset\n     * @param {?} fpPositionRelativeToArrow\n     * @param {?} fpSearchText\n     * @param {?} fpLoadingText\n     * @param {?} fpPopularLabel\n     * @param {?} fpResultsLabel\n     * @param {?} fpPresetLabel\n     * @param {?} fpPresetFonts\n     * @param {?} fpPresetNotice\n     * @param {?} fpCancelButton\n     * @param {?} fpCancelButtonText\n     * @param {?} fpCancelButtonClass\n     * @param {?} fpUploadButton\n     * @param {?} fpUploadButtonText\n     * @param {?} fpUploadButtonClass\n     * @return {?}\n     */\n    function (font, fpWidth, fpHeight, fpDialogDisplay, fpSizeSelect, fpStyleSelect, fpPosition, fpPositionOffset, fpPositionRelativeToArrow, fpSearchText, fpLoadingText, fpPopularLabel, fpResultsLabel, fpPresetLabel, fpPresetFonts, fpPresetNotice, fpCancelButton, fpCancelButtonText, fpCancelButtonClass, fpUploadButton, fpUploadButtonText, fpUploadButtonClass) {\n        this.selectedFont = !!font;\n        this.font = new Font(font);\n        this.initialFont = new Font(font);\n        this.fpPosition = fpPosition;\n        this.fpPositionOffset = parseInt(fpPositionOffset, 10);\n        if (!fpPositionRelativeToArrow) {\n            this.dialogArrowOffset = 0;\n        }\n        if (fpDialogDisplay === 'inline') {\n            this.dialogArrowSize = 0;\n            this.dialogArrowOffset = 0;\n        }\n        this.fpSearchText = fpSearchText;\n        this.fpLoadingText = fpLoadingText;\n        this.fpPopularLabel = fpPopularLabel;\n        this.fpResultsLabel = fpResultsLabel;\n        this.fpSizeSelect = fpSizeSelect;\n        this.fpStyleSelect = fpStyleSelect;\n        this.fpPresetLabel = fpPresetLabel;\n        this.fpPresetFonts = fpPresetFonts;\n        this.fpPresetNotice = fpPresetNotice;\n        this.fpCancelButton = fpCancelButton;\n        this.fpCancelButtonText = fpCancelButtonText;\n        this.fpCancelButtonClass = fpCancelButtonClass;\n        this.fpUploadButton = fpUploadButton;\n        this.fpUploadButtonText = fpUploadButtonText;\n        this.fpUploadButtonClass = fpUploadButtonClass;\n        this.autoWidth = fpWidth === 'auto';\n        this.fpWidth = parseInt(fpWidth, 10);\n        this.fpHeight = parseInt(fpHeight, 10);\n        this.fpDialogDisplay = fpDialogDisplay;\n        this.setCurrentFonts(this.getPresetFonts().concat(this.googleFonts));\n        this.searchTerm.reset({ disabled: (this.fpPresetFonts.length > 0) });\n    };\n    /**\n     * @return {?}\n     */\n    FontPickerComponent.prototype.openFontPicker = /**\n     * @return {?}\n     */\n    function () {\n        if (!this.open) {\n            this.setDialogPosition();\n            this.searchTerm.setValue('');\n            window.addEventListener('resize', this.listenerResize);\n            document.addEventListener('mousedown', this.listenerMouseDown);\n            this.open = true;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    FontPickerComponent.prototype.closeFontPicker = /**\n     * @return {?}\n     */\n    function () {\n        this.open = false;\n        window.removeEventListener('resize', this.listenerResize);\n        document.removeEventListener('mousedown', this.listenerMouseDown);\n    };\n    /**\n     * @private\n     * @param {?} font\n     * @return {?}\n     */\n    FontPickerComponent.prototype.isFontAvailable = /**\n     * @private\n     * @param {?} font\n     * @return {?}\n     */\n    function (font) {\n        if (!this.testWidth) {\n            this.testContainer.style.fontFamily = 'monospace';\n            document.body.appendChild(this.testContainer);\n            this.testWidth = this.testContainer.clientWidth;\n            document.body.removeChild(this.testContainer);\n        }\n        this.testContainer.style.fontFamily = font.family + ', monospace';\n        document.body.appendChild(this.testContainer);\n        /** @type {?} */\n        var width = this.testContainer.clientWidth;\n        document.body.removeChild(this.testContainer);\n        return width !== this.testWidth;\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    FontPickerComponent.prototype.getPresetFonts = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        /** @type {?} */\n        var presetFonts = [];\n        if (this.googleFonts && this.fpPresetFonts && this.fpPresetFonts.length) {\n            this.fpPresetFonts.forEach((/**\n             * @param {?} font\n             * @return {?}\n             */\n            function (font) {\n                /** @type {?} */\n                var fontClass = _this.findFont(font, true);\n                if (!fontClass) {\n                    fontClass = new Font({\n                        family: font,\n                        styles: ['regular', 'italic']\n                    });\n                }\n                presetFonts.push(fontClass);\n            }));\n            this.presetFonts = presetFonts;\n        }\n        return presetFonts;\n    };\n    /**\n     * @private\n     * @param {?} target\n     * @return {?}\n     */\n    FontPickerComponent.prototype.setCurrentFonts = /**\n     * @private\n     * @param {?} target\n     * @return {?}\n     */\n    function (target) {\n        var _this = this;\n        if (target !== this.currentFonts) {\n            this.currentFonts = target;\n            this.loadedFonts = this.fontAmount;\n            /** @type {?} */\n            var initialFonts = this.currentFonts.slice(0, this.fontAmount);\n            this.loadGoogleFonts(initialFonts);\n            this.cdRef.markForCheck();\n            setTimeout((/**\n             * @return {?}\n             */\n            function () {\n                if (_this.scrollbar && _this.scrollbar.directiveRef) {\n                    _this.scrollbar.directiveRef.scrollToY(0);\n                }\n            }), 0);\n        }\n    };\n    /**\n     * @private\n     * @param {?} searchVal\n     * @param {?=} exactMatch\n     * @return {?}\n     */\n    FontPickerComponent.prototype.findFont = /**\n     * @private\n     * @param {?} searchVal\n     * @param {?=} exactMatch\n     * @return {?}\n     */\n    function (searchVal, exactMatch) {\n        if (exactMatch === void 0) { exactMatch = false; }\n        return this.findFonts(searchVal, exactMatch)[0];\n    };\n    /**\n     * @private\n     * @param {?} searchVal\n     * @param {?=} exactMatch\n     * @return {?}\n     */\n    FontPickerComponent.prototype.findFonts = /**\n     * @private\n     * @param {?} searchVal\n     * @param {?=} exactMatch\n     * @return {?}\n     */\n    function (searchVal, exactMatch) {\n        if (exactMatch === void 0) { exactMatch = false; }\n        /** @type {?} */\n        var fullmatchFonts = [];\n        /** @type {?} */\n        var candidateFonts = [];\n        searchVal = searchVal.toLowerCase();\n        this.googleFonts.forEach((/**\n         * @param {?} font\n         * @return {?}\n         */\n        function (font) {\n            if (searchVal === font.family.toLowerCase()) {\n                fullmatchFonts.push(font);\n                return;\n            }\n            if (!exactMatch && font.family.toLowerCase().indexOf(searchVal) > -1) {\n                candidateFonts.push(font);\n            }\n        }));\n        /** @type {?} */\n        var resultFonts = fullmatchFonts.concat(candidateFonts);\n        return resultFonts;\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    FontPickerComponent.prototype.loadMoreFonts = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.open && !this.loading && this.loadedFonts < this.currentFonts.length) {\n            /** @type {?} */\n            var moreFonts = this.currentFonts.slice(this.loadedFonts, this.loadedFonts + this.fontAmount);\n            this.loadGoogleFonts(moreFonts);\n            this.loadedFonts += moreFonts.length;\n            setTimeout((/**\n             * @return {?}\n             */\n            function () {\n                if (_this.scrollbar && _this.scrollbar.directiveRef) {\n                    _this.scrollbar.directiveRef.update();\n                }\n            }), 0);\n            this.cdRef.markForCheck();\n            this.cdRef.detectChanges();\n        }\n    };\n    /**\n     * @private\n     * @param {?} fonts\n     * @return {?}\n     */\n    FontPickerComponent.prototype.loadGoogleFonts = /**\n     * @private\n     * @param {?} fonts\n     * @return {?}\n     */\n    function (fonts) {\n        var _this = this;\n        fonts.slice(0, this.fontAmount).forEach((/**\n         * @param {?} font\n         * @return {?}\n         */\n        function (font) {\n            if (font && font.files && !_this.isFontAvailable(font)) {\n                /** @type {?} */\n                var style = (font.styles.indexOf('regular') > -1) ?\n                    '' : ':' + font.styles.find((/**\n                 * @param {?} x\n                 * @return {?}\n                 */\n                function (x) { return !isNaN(x); }));\n                _this.service.loadFont({ family: font.family, style: style, size: font.size });\n            }\n        }));\n    };\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    FontPickerComponent.prototype.searchGoogleFonts = /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (!value) {\n            this.searchTerm.setValue('');\n            this.setCurrentFonts(this.googleFonts);\n        }\n        else {\n            value = value.toLowerCase();\n            if (this.googleFonts) {\n                this.loadedFonts = this.fontAmount;\n                /** @type {?} */\n                var searchResult = this.findFonts(value, false);\n                this.setCurrentFonts(searchResult);\n                this.cdRef.markForCheck();\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {?} parent\n     * @param {?} child\n     * @return {?}\n     */\n    FontPickerComponent.prototype.isDescendant = /**\n     * @private\n     * @param {?} parent\n     * @param {?} child\n     * @return {?}\n     */\n    function (parent, child) {\n        /** @type {?} */\n        var node = child.parentNode;\n        while (node !== null) {\n            if (node === parent) {\n                return true;\n            }\n            node = node.parentNode;\n        }\n        return false;\n    };\n    /**\n     * @private\n     * @param {?} element\n     * @param {?} offset\n     * @return {?}\n     */\n    FontPickerComponent.prototype.createDialogBox = /**\n     * @private\n     * @param {?} element\n     * @param {?} offset\n     * @return {?}\n     */\n    function (element, offset) {\n        return {\n            top: element.getBoundingClientRect().top + (offset ? window.pageYOffset : 0),\n            left: element.getBoundingClientRect().left + (offset ? window.pageXOffset : 0),\n            width: element.offsetWidth,\n            height: element.offsetHeight\n        };\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    FontPickerComponent.prototype.setDialogPosition = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        if (this.fpDialogDisplay === 'inline') {\n            this.position = 'relative';\n        }\n        else {\n            /** @type {?} */\n            var position = 'static';\n            /** @type {?} */\n            var transform = '';\n            /** @type {?} */\n            var style = void 0;\n            /** @type {?} */\n            var parentNode = null;\n            /** @type {?} */\n            var transformNode = null;\n            /** @type {?} */\n            var node = this.directiveElementRef.nativeElement.parentNode;\n            /** @type {?} */\n            var dialogHeight = this.dialogElement.nativeElement.offsetHeight;\n            while (node !== null && node.tagName !== 'HTML') {\n                style = window.getComputedStyle(node);\n                position = style.getPropertyValue('position');\n                transform = style.getPropertyValue('transform');\n                if (position !== 'static' && parentNode === null) {\n                    parentNode = node;\n                }\n                if (transform && transform !== 'none' && transformNode === null) {\n                    transformNode = node;\n                }\n                if (position === 'fixed') {\n                    parentNode = transformNode;\n                    break;\n                }\n                node = node.parentNode;\n            }\n            /** @type {?} */\n            var boxDirective = this.createDialogBox(this.directiveElementRef.nativeElement, (position !== 'fixed'));\n            if (this.autoWidth) {\n                this.fpWidth = this.directiveElementRef.nativeElement.offsetWidth;\n            }\n            if (this.useRootViewContainer || (position === 'fixed' &&\n                (!parentNode || parentNode instanceof HTMLUnknownElement))) {\n                this.top = boxDirective.top;\n                this.left = boxDirective.left;\n            }\n            else {\n                if (parentNode === null) {\n                    parentNode = node;\n                }\n                /** @type {?} */\n                var boxParent = this.createDialogBox(parentNode, (position !== 'fixed'));\n                this.top = boxDirective.top - boxParent.top;\n                this.left = boxDirective.left - boxParent.left;\n            }\n            if (position === 'fixed') {\n                this.position = 'fixed';\n            }\n            if (this.fpPosition === 'left') {\n                this.top += boxDirective.height * this.fpPositionOffset / 100 - this.dialogArrowOffset;\n                this.left -= this.fpWidth + this.dialogArrowSize - 2;\n            }\n            else if (this.fpPosition === 'top') {\n                this.arrowTop = dialogHeight - 1;\n                this.top -= dialogHeight + this.dialogArrowSize;\n                this.left += this.fpPositionOffset / 100 * boxDirective.width - this.dialogArrowOffset;\n            }\n            else if (this.fpPosition === 'bottom') {\n                this.top += boxDirective.height + this.dialogArrowSize;\n                this.left += this.fpPositionOffset / 100 * boxDirective.width - this.dialogArrowOffset;\n            }\n            else {\n                this.top += boxDirective.height * this.fpPositionOffset / 100 - this.dialogArrowOffset;\n                this.left += boxDirective.width + this.dialogArrowSize - 2;\n            }\n        }\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    FontPickerComponent.prototype.onResize = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        if (this.position === 'fixed') {\n            this.setDialogPosition();\n        }\n        else if (this.fpDialogDisplay !== 'inline') {\n            this.closeFontPicker();\n        }\n    };\n    /**\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    FontPickerComponent.prototype.onMouseDown = /**\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        if (this.fpDialogDisplay === 'popup' &&\n            event.target !== this.directiveElementRef.nativeElement &&\n            !this.isDescendant(this.elRef.nativeElement, event.target) &&\n            !this.isDescendant(this.directiveElementRef.nativeElement, event.target)) {\n            this.closeFontPicker();\n            this.cdRef.markForCheck();\n        }\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    FontPickerComponent.prototype.onUploadFont = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        event.stopPropagation();\n        this.directiveInstance.uploadFont();\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    FontPickerComponent.prototype.onAcceptSelect = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        event.stopPropagation();\n        this.directiveInstance.fontChanged(this.font);\n        if (this.fpDialogDisplay === 'popup') {\n            this.closeFontPicker();\n        }\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    FontPickerComponent.prototype.onCancelSelect = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        event.stopPropagation();\n        this.selectedFont = false;\n        this.font.size = this.initialFont.size;\n        this.font.files = this.initialFont.files;\n        this.font.style = this.initialFont.style;\n        this.font.family = this.initialFont.family;\n        this.font.styles = this.initialFont.styles;\n        this.directiveInstance.fontChanged(this.font);\n        if (this.fpDialogDisplay === 'popup') {\n            this.closeFontPicker();\n        }\n    };\n    /**\n     * @param {?} font\n     * @return {?}\n     */\n    FontPickerComponent.prototype.onSelectFont = /**\n     * @param {?} font\n     * @return {?}\n     */\n    function (font) {\n        this.selectedFont = true;\n        this.font.files = font.files;\n        this.font.family = font.family;\n        this.font.styles = font.styles;\n        this.font.style = (font.styles.indexOf('regular') !== -1) ?\n            'regular' : font.styles[0];\n        this.directiveInstance.fontChanged(this.font);\n        this.cdRef.markForCheck();\n        this.cdRef.detectChanges();\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    FontPickerComponent.prototype.onSearchReset = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        event.stopPropagation();\n        this.searchTerm.setValue('');\n        this.setCurrentFonts(this.googleFonts);\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    FontPickerComponent.prototype.onFontSizeChange = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        this.font.size = event.target.value + 'px';\n        this.directiveInstance.fontChanged(this.font);\n    };\n    /**\n     * @param {?} event\n     * @param {?} font\n     * @return {?}\n     */\n    FontPickerComponent.prototype.onFontStyleChange = /**\n     * @param {?} event\n     * @param {?} font\n     * @return {?}\n     */\n    function (event, font) {\n        /** @type {?} */\n        var str = this.font.family + ':' + event.target.value;\n        if (font.files) {\n            load({\n                google: {\n                    families: [str]\n                }\n            });\n        }\n        this.directiveInstance.fontChanged(this.font);\n    };\n    FontPickerComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'font-picker',\n                    template: \"<div #dialogPopup class=\\\"font-picker\\\" [style.visibility]=\\\"!open ? 'hidden' : 'visible'\\\" [style.height.px]=\\\"fpHeight\\\" [style.width.px]=\\\"fpWidth\\\" [style.top.px]=\\\"top\\\" [style.left.px]=\\\"left\\\" [style.position]=\\\"position\\\">\\n  <div *ngIf=\\\"fpDialogDisplay=='popup'\\\" class=\\\"arrow arrow-{{fpPosition}}\\\" [style.top.px]=\\\"arrowTop\\\"></div>\\n\\n  <div *ngIf=\\\"googleFonts.length\\\" class=\\\"search-box\\\">\\n    <input class=\\\"search-field\\\" placeholder=\\\"{{fpSearchText || ''}}\\\" [formControl]=\\\"searchTerm\\\" />\\n\\n    <div class=\\\"search-reset\\\" [hidden]=\\\"!searchTerm.value\\\" (click)=\\\"onSearchReset($event)\\\">\\u00D7</div>\\n  </div>\\n\\n  <div *ngIf=\\\"loading\\\" class=\\\"load-text\\\">{{fpLoadingText || ''}}</div>\\n\\n  <perfect-scrollbar #dialogScrollbar class=\\\"font-list\\\" [config]=\\\"config\\\" [attr.fxFlex]=\\\"'auto'\\\" (psYReachEnd)=\\\"renderMore.next($event)\\\">\\n    <div *ngIf=\\\"presetVisible && fpPresetFonts.length\\\">\\n      <div class=\\\"font-group\\\">\\n        <div class=\\\"group-text\\\">{{fpPresetLabel || ''}}</div>\\n        <div class=\\\"group-line\\\"></div>\\n      </div>\\n\\n      <div *ngFor=\\\"let fontItem of presetFonts | StatefulSlice:0:loadedFonts; trackBy:trackFont\\\" class=\\\"font-item\\\" [ngClass]=\\\"{active: fontItem.family.toLowerCase() == font.family.toLowerCase(), selected: selectedFont}\\\" [ngStyle]=\\\"{'font-family': fontItem.family}\\\" (click)=\\\"onSelectFont(fontItem)\\\">\\n        <div class=\\\"font-info\\\">\\n          <span class=\\\"font-name\\\">{{fontItem.family || ''}}</span>\\n\\n          <div *ngIf=\\\"!fontItem.files && safeFonts.indexOf(fontItem.family) === -1 && googleFonts.length\\\" class=\\\"not-available\\\">\\n            <span>!</span>\\n\\n            <div class=\\\"notice-text\\\">{{fpPresetNotice || 'This font is not from Google Fonts. If you select it, you might have to import it manually in your CSS rules.'}}</div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <ng-container *ngIf=\\\"googleFonts.length\\\">\\n      <div class=\\\"font-group\\\">\\n        <div class=\\\"group-text black\\\">{{listLabel || ''}}</div>\\n        <div class=\\\"group-line black\\\"></div>\\n      </div>\\n\\n      <div *ngFor=\\\"let fontItem of (currentFonts | StatefulSlice:0:loadedFonts)\\\" class=\\\"font-item\\\" [ngClass]=\\\"{'active': fontItem.family.toLowerCase() == font.family.toLowerCase(), selected: selectedFont}\\\" [ngStyle]=\\\"{'font-family': fontItem.family}\\\" (click)=\\\"onSelectFont(fontItem)\\\">\\n        <div class=\\\"font-info\\\">\\n          <span class=\\\"font-name\\\">{{fontItem.family || ''}}</span>\\n        </div>\\n      </div>\\n    </ng-container>\\n  </perfect-scrollbar>\\n\\n  <div *ngIf=\\\"selectedFont && (fpStyleSelect || fpSizeSelect)\\\">\\n    <div  class=\\\"font-options\\\">\\n      <div *ngIf=\\\"fpStyleSelect\\\" class=\\\"left\\\">\\n        <select class=\\\"style-select\\\" [disabled]=\\\"!font.styles\\\" (change)=\\\"onFontStyleChange($event, font)\\\" [(ngModel)]=\\\"font.style\\\">\\n          <option *ngFor=\\\"let style of font.styles\\\" [value]=\\\"style\\\">{{style | FontStyles}}</option>\\n        </select>\\n      </div>\\n\\n      <div *ngIf=\\\"fpSizeSelect\\\" class=\\\"right\\\">\\n        <input type=\\\"number\\\" pattern=\\\"[0-9]*\\\" min=\\\"1\\\" max=\\\"100\\\" (change)=\\\"onFontSizeChange($event)\\\" [ngClass]=\\\"{'size-select': fpStyleSelect}\\\" [ngModel]=\\\"font.size | FontSize\\\" />\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div *ngIf=\\\"fpUploadButton || fpCancelButton\\\" class=\\\"button-area\\\">\\n    <button *ngIf=\\\"fpUploadButton\\\" type=\\\"button\\\" class=\\\"{{fpUploadButtonClass}}\\\" (click)=\\\"onUploadFont($event)\\\">{{fpUploadButtonText || 'Upload'}}</button>\\n\\n    <button *ngIf=\\\"fpCancelButton\\\" type=\\\"button\\\" class=\\\"{{fpCancelButtonClass}}\\\" (click)=\\\"onCancelSelect($event)\\\">{{fpCancelButtonText || 'Cancel'}}</button>\\n  </div>\\n</div>\\n\",\n                    encapsulation: ViewEncapsulation.None,\n                    styles: [\".font-picker {\\n  position: absolute;\\n  z-index: 1000;\\n  top: 250px;\\n  left: 30px;\\n\\n  display: flex;\\n  flex-direction: column;\\n  width: 280px;\\n  height: 320px;\\n  min-width: 200px;\\n  min-height: 240px;\\n  border: #777 solid 1px;\\n\\n  cursor: default;\\n  user-select: none;\\n  font-family: 'Open Sans', sans-serif;\\n  background-color: #fff;\\n}\\n\\n.font-picker[hidden] {\\n  display: none;\\n}\\n\\n.font-picker input,\\n.font-picker select {\\n  width: 100%;\\n  padding: 4px;\\n  border: none;\\n  border-bottom: 2px solid #cfcfcf;\\n  outline: none;\\n\\n  font-size: 14px;\\n  line-height: 18px;\\n  text-align: left;\\n  background: none;\\n\\n  transition: border 300ms ease;\\n}\\n\\n.font-picker input:hover,\\n.font-picker input:focus,\\n.font-picker input:active,\\n.font-picker select:hover,\\n.font-picker select:focus,\\n.font-picker select:active {\\n  border-bottom: 2px solid #999;\\n}\\n\\n.font-picker input:invalid,\\n.font-picker select:invalid {\\n  border-bottom: 2px solid #e74c3c;\\n\\n  box-shadow: none;\\n}\\n\\n.font-picker input::-webkit-inner-spin-button,\\n.font-picker input::-webkit-outer-spin-button {\\n  margin: 0;\\n\\n  -webkit-appearance: none;\\n}\\n\\n.font-picker .arrow {\\n  position: absolute;\\n  z-index: 999999;\\n\\n  width: 0;\\n  height: 0;\\n  border-style: solid;\\n}\\n\\n.font-picker .arrow.arrow-left {\\n  top: 10px;\\n  left: 231px;\\n\\n  border-width: 5px 10px;\\n  border-color: rgba(0, 0, 0, 0) rgba(0, 0, 0, 0) rgba(0, 0, 0, 0) #777;\\n}\\n\\n.font-picker .arrow.arrow-right {\\n  top: 10px;\\n  left: -20px;\\n\\n  border-width: 5px 10px;\\n  border-color: rgba(0, 0, 0, 0) #777 rgba(0, 0, 0, 0) rgba(0, 0, 0, 0);\\n}\\n\\n.font-picker .arrow.arrow-top {\\n  top: 0;\\n  left: 10px;\\n\\n  border-width: 10px 5px;\\n  border-color: #777 rgba(0, 0, 0, 0) rgba(0, 0, 0, 0) rgba(0, 0, 0, 0);\\n}\\n\\n.font-picker .arrow.arrow-bottom {\\n  top: -20px;\\n  left: 10px;\\n\\n  border-width: 10px 5px;\\n  border-color: rgba(0, 0, 0, 0) rgba(0, 0, 0, 0) #777 rgba(0, 0, 0, 0);\\n}\\n\\n.font-picker .search-box {\\n  position: relative;\\n}\\n\\n.font-picker .search-field {\\n  box-sizing: border-box;\\n\\n  padding: 10px 48px 10px 16px;\\n\\n  &:disabled {\\n    opacity: 0.5;\\n\\n    cursor: not-allowed;\\n    background-color: #888;\\n  }\\n}\\n\\n.font-picker .search-reset {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n\\n  padding: 1px 12px;\\n\\n  cursor: pointer;\\n  font-size: 31px;\\n  color: #777;\\n\\n  transition: color 300ms ease;\\n}\\n\\n.font-picker .search-reset:hover {\\n  color: #555;\\n}\\n\\n.font-picker .load-text {\\n  padding: 16px;\\n\\n  font-size: 12px;\\n  text-align: center;\\n  color: #000;\\n}\\n\\n.font-picker .font-list {\\n  position: relative;\\n\\n  overflow: hidden;\\n  flex: 1 1 auto;\\n}\\n\\n.font-picker .font-list .font-item {\\n  position: relative;\\n\\n  padding: 8px 16px;\\n\\n  cursor: pointer;\\n}\\n\\n.font-picker .font-list .font-item.active {\\n  font-weight: bold;\\n}\\n\\n.font-picker .font-list .font-item.active.selected {\\n  cursor: default;\\n  font-weight: normal;\\n  background: #d9d9d9;\\n}\\n\\n.font-picker .font-list .font-item .font-info {\\n  margin: 4px 0;\\n}\\n\\n.font-picker .font-list .font-item .font-info .font-name {\\n  font-size: 14px;\\n  text-transform: capitalize;\\n  color: #555;\\n}\\n\\n.font-picker .font-list .font-item .font-info .not-available {\\n  float: right;\\n\\n  width: 24px;\\n  margin: -8px -8px 0 0;\\n\\n  font-size: 24px;\\n  font-weight: 900;\\n  font-family: 'Open Sans', sans-serif;\\n  text-align: center;\\n  text-transform: none;\\n  color: #ef8b80;\\n}\\n\\n.font-picker .font-list .font-item .font-info .not-available .notice-text {\\n  content: 'This font is not from Google Fonts. If you select it, you might have to import it manually in your CSS rules.';\\n\\n  position: absolute;\\n  z-index: 10;\\n  top: 0;\\n  right: 12px;\\n  left: 12px;\\n\\n  opacity: 0;\\n  padding: 12px 16px;\\n  margin: 0 auto;\\n  border-radius: 2px;\\n\\n  pointer-events: none;\\n  font-size: 13px;\\n  font-weight: normal;\\n  text-align: left;\\n  color: #fff;\\n  background: rgba(60, 60, 60, 0.8);\\n\\n  transition: opacity 150ms ease;\\n}\\n\\n.font-picker .font-list .font-item .font-info .not-available:hover {\\n  color: #ea6153;\\n}\\n\\n.font-picker .font-list .font-item .font-info .not-available:hover .notice-text {\\n  opacity: 1;\\n}\\n\\n.font-picker .font-list .font-item .font-text {\\n  padding: 4px 0;\\n\\n  font-size: 16px;\\n  text-align: right;\\n  color: #999;\\n}\\n\\n.font-picker .font-list .font-group {\\n  display: flex;\\n  flex: none;\\n}\\n\\n.font-picker .font-list .font-group .group-line {\\n  flex: 1 1 auto;\\n  height: 2px;\\n  margin-top: 14px;\\n  margin-right: 12px;\\n\\n  background: #e74c3c;\\n}\\n\\n.font-picker .font-list .font-group .group-line.black {\\n  background: #000;\\n}\\n\\n.font-picker .font-list .font-group .group-text {\\n  overflow: hidden;\\n  box-sizing: border-box;\\n\\n  max-width: 75%;\\n  padding: 8px 12px;\\n\\n  font-size: 11px;\\n  font-weight: bold;\\n  white-space: nowrap;\\n  text-align: left;\\n  text-overflow: ellipsis;\\n  color: #e74c3c;\\n}\\n\\n.font-picker .font-list .font-group .group-text.black {\\n  color: #000;\\n}\\n\\n.font-picker .font-options {\\n  display: flex;\\n  box-sizing: border-box;\\n\\n  padding: 8px;\\n  border-top: 2px solid #cfcfcf;\\n}\\n\\n.font-picker .font-options .left {\\n  flex: 1 1 auto;\\n  padding: 0 2px;\\n}\\n\\n.font-picker .font-options .left .style-select {\\n  text-transform: capitalize;\\n}\\n\\n.font-picker .font-options .left .style-select:disabled {\\n  background-color: #777;\\n}\\n\\n.font-picker .font-options .right {\\n  padding: 0 2px;\\n}\\n\\n.font-picker .font-options .right .size-select {\\n  width: 48px;\\n\\n  text-align: center;\\n}\\n\\n.font-picker .button-area {\\n  padding: 0 4px 4px;\\n  border-top: 1px solid #aaa;\\n\\n  text-align: right;\\n}\\n\\n.font-picker .button-area .fp-cancel-button-class,\\n.font-picker .button-area .fp-upload-button-class {\\n  display: inline-block;\\n  margin: 8px;\\n\\n  text-align: center;\\n  text-transform: uppercase;\\n}\\n\"]\n                }] }\n    ];\n    /** @nocollapse */\n    FontPickerComponent.ctorParameters = function () { return [\n        { type: ChangeDetectorRef },\n        { type: ElementRef },\n        { type: FontPickerService }\n    ]; };\n    FontPickerComponent.propDecorators = {\n        dialogElement: [{ type: ViewChild, args: ['dialogPopup', { static: true },] }],\n        scrollbar: [{ type: ViewChild, args: ['dialogScrollbar', { static: true },] }],\n        handleEsc: [{ type: HostListener, args: ['document:keyup.esc', ['$event'],] }],\n        handleEnter: [{ type: HostListener, args: ['document:keyup.enter', ['$event'],] }]\n    };\n    return FontPickerComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar FontPickerDirective = /** @class */ (function () {\n    function FontPickerDirective(injector, resolver, appRef, vcRef, elRef, cdRef, service) {\n        this.injector = injector;\n        this.resolver = resolver;\n        this.appRef = appRef;\n        this.vcRef = vcRef;\n        this.elRef = elRef;\n        this.cdRef = cdRef;\n        this.service = service;\n        this.fpWidth = '280px';\n        this.fpHeight = '320px';\n        this.fpFallbackFont = {\n            family: 'Roboto',\n            size: '16px',\n            style: 'regular',\n            styles: ['regular']\n        };\n        this.fpAutoLoad = true;\n        this.fpPresetLabel = '';\n        this.fpPresetFonts = [];\n        this.fpPresetNotice = '';\n        this.fpSizeSelect = true;\n        this.fpStyleSelect = true;\n        this.fpDialogDisplay = 'popup';\n        this.fpUseRootViewContainer = false;\n        this.fpPosition = 'bottom';\n        this.fpPositionOffset = '0%';\n        this.fpPositionRelativeToArrow = false;\n        this.fpSearchText = 'Search fonts...';\n        this.fpLoadingText = 'Loading fonts...';\n        this.fpPopularLabel = 'Popular fonts';\n        this.fpResultsLabel = 'Search results';\n        this.fpCancelButton = false;\n        this.fpCancelButtonText = 'Cancel';\n        this.fpCancelButtonClass = 'fp-cancel-button-class';\n        this.fpUploadButton = false;\n        this.fpUploadButtonText = 'Upload';\n        this.fpUploadButtonClass = 'fp-upload-button-class';\n        this.fontPickerUpload = new EventEmitter();\n        this.fontPickerChange = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    FontPickerDirective.prototype.onClick = /**\n     * @return {?}\n     */\n    function () {\n        this.toggleDialog();\n    };\n    /**\n     * @return {?}\n     */\n    FontPickerDirective.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        this.fontPicker = this.fontPicker || this.fpFallbackFont;\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    FontPickerDirective.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if (changes.fontPicker) {\n            this.fontPicker = this.fontPicker || this.fpFallbackFont;\n            if (this.fpAutoLoad) {\n                this.loadFont(this.fontPicker);\n            }\n        }\n    };\n    /**\n     * @param {?} font\n     * @return {?}\n     */\n    FontPickerDirective.prototype.loadFont = /**\n     * @param {?} font\n     * @return {?}\n     */\n    function (font) {\n        this.service.loadFont(font);\n    };\n    /**\n     * @return {?}\n     */\n    FontPickerDirective.prototype.uploadFont = /**\n     * @return {?}\n     */\n    function () {\n        this.fontPickerUpload.emit();\n    };\n    /**\n     * @return {?}\n     */\n    FontPickerDirective.prototype.openDialog = /**\n     * @return {?}\n     */\n    function () {\n        if (!this.dialog || !this.dialog.open) {\n            this.toggleDialog();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    FontPickerDirective.prototype.closeDialog = /**\n     * @return {?}\n     */\n    function () {\n        if (this.dialog && this.dialog.open) {\n            this.toggleDialog();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    FontPickerDirective.prototype.toggleDialog = /**\n     * @return {?}\n     */\n    function () {\n        if (!this.dialog) {\n            /** @type {?} */\n            var vcRef = this.vcRef;\n            if (this.fpUseRootViewContainer && this.fpDialogDisplay !== 'inline') {\n                /** @type {?} */\n                var classOfRootComponent = this.appRef.componentTypes[0];\n                /** @type {?} */\n                var appInstance = this.injector.get(classOfRootComponent);\n                vcRef = appInstance.vcRef || appInstance.viewContainerRef || this.vcRef;\n                if (vcRef === this.vcRef) {\n                    console.warn('You are using fpUseRootViewContainer, ' +\n                        'but the root component is not exposing viewContainerRef!' +\n                        'Please expose it by adding \\'public vcRef: ViewContainerRef\\' to the constructor.');\n                }\n            }\n            /** @type {?} */\n            var compFactory = this.resolver.resolveComponentFactory(FontPickerComponent);\n            /** @type {?} */\n            var injector = ReflectiveInjector.fromResolvedProviders([], vcRef.parentInjector);\n            this.dialog = vcRef.createComponent(compFactory, 0, injector, []).instance;\n            this.dialog.setDialog(this, this.elRef, this.fpUseRootViewContainer, this.fontPicker, this.fpWidth, this.fpHeight, this.fpDialogDisplay, this.fpSizeSelect, this.fpStyleSelect, this.fpPosition, this.fpPositionOffset, this.fpPositionRelativeToArrow, this.fpSearchText, this.fpLoadingText, this.fpPopularLabel, this.fpResultsLabel, this.fpPresetLabel, this.fpPresetFonts, this.fpPresetNotice, this.fpCancelButton, this.fpCancelButtonText, this.fpCancelButtonClass, this.fpUploadButton, this.fpUploadButtonText, this.fpUploadButtonClass);\n        }\n        else if (!this.dialog.open) {\n            this.dialog.updateDialog(this.fontPicker, this.fpWidth, this.fpHeight, this.fpDialogDisplay, this.fpSizeSelect, this.fpStyleSelect, this.fpPosition, this.fpPositionOffset, this.fpPositionRelativeToArrow, this.fpSearchText, this.fpLoadingText, this.fpPopularLabel, this.fpResultsLabel, this.fpPresetLabel, this.fpPresetFonts, this.fpPresetNotice, this.fpCancelButton, this.fpCancelButtonText, this.fpCancelButtonClass, this.fpUploadButton, this.fpUploadButtonText, this.fpUploadButtonClass);\n            this.dialog.openFontPicker();\n        }\n        else {\n            this.dialog.closeFontPicker();\n        }\n    };\n    /**\n     * @param {?} font\n     * @return {?}\n     */\n    FontPickerDirective.prototype.fontChanged = /**\n     * @param {?} font\n     * @return {?}\n     */\n    function (font) {\n        this.fontPickerChange.emit(font);\n        this.cdRef.markForCheck();\n        this.cdRef.detectChanges();\n    };\n    FontPickerDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[fontPicker]',\n                    exportAs: 'ngxFontPicker'\n                },] }\n    ];\n    /** @nocollapse */\n    FontPickerDirective.ctorParameters = function () { return [\n        { type: Injector },\n        { type: ComponentFactoryResolver },\n        { type: ApplicationRef },\n        { type: ViewContainerRef },\n        { type: ElementRef },\n        { type: ChangeDetectorRef },\n        { type: FontPickerService }\n    ]; };\n    FontPickerDirective.propDecorators = {\n        fontPicker: [{ type: Input, args: ['fontPicker',] }],\n        fpWidth: [{ type: Input, args: ['fpWidth',] }],\n        fpHeight: [{ type: Input, args: ['fpHeight',] }],\n        fpFallbackFont: [{ type: Input, args: ['fpFallbackFont',] }],\n        fpAutoLoad: [{ type: Input, args: ['fpAutoLoad',] }],\n        fpPresetLabel: [{ type: Input, args: ['fpPresetLabel',] }],\n        fpPresetFonts: [{ type: Input, args: ['fpPresetFonts',] }],\n        fpPresetNotice: [{ type: Input, args: ['fpPresetNotice',] }],\n        fpSizeSelect: [{ type: Input, args: ['fpSizeSelect',] }],\n        fpStyleSelect: [{ type: Input, args: ['fpStyleSelect',] }],\n        fpDialogDisplay: [{ type: Input, args: ['fpDialogDisplay',] }],\n        fpUseRootViewContainer: [{ type: Input, args: ['fpUseRootViewContainer',] }],\n        fpPosition: [{ type: Input, args: ['fpPosition',] }],\n        fpPositionOffset: [{ type: Input, args: ['fpPositionOffset',] }],\n        fpPositionRelativeToArrow: [{ type: Input, args: ['fpPositionRelativeToArrow',] }],\n        fpSearchText: [{ type: Input, args: ['fpSearchText',] }],\n        fpLoadingText: [{ type: Input, args: ['fpLoadingText',] }],\n        fpPopularLabel: [{ type: Input, args: ['fpPopularLabel',] }],\n        fpResultsLabel: [{ type: Input, args: ['fpResultsLabel',] }],\n        fpCancelButton: [{ type: Input, args: ['fpCancelButton',] }],\n        fpCancelButtonText: [{ type: Input, args: ['fpCancelButtonText',] }],\n        fpCancelButtonClass: [{ type: Input, args: ['fpCancelButtonClass',] }],\n        fpUploadButton: [{ type: Input, args: ['fpUploadButton',] }],\n        fpUploadButtonText: [{ type: Input, args: ['fpUploadButtonText',] }],\n        fpUploadButtonClass: [{ type: Input, args: ['fpUploadButtonClass',] }],\n        fontPickerUpload: [{ type: Output, args: ['fontPickerUpload',] }],\n        fontPickerChange: [{ type: Output, args: ['fontPickerChange',] }],\n        onClick: [{ type: HostListener, args: ['click',] }]\n    };\n    return FontPickerDirective;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar FontSizePipe = /** @class */ (function () {\n    function FontSizePipe() {\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    FontSizePipe.prototype.transform = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return value ? parseInt(value.replace(/[^-\\d\\.]/g, '') || '16', 10) : 0;\n    };\n    FontSizePipe.decorators = [\n        { type: Pipe, args: [{\n                    name: 'FontSize',\n                    pure: true\n                },] }\n    ];\n    return FontSizePipe;\n}());\nvar FontStylesPipe = /** @class */ (function () {\n    function FontStylesPipe() {\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    FontStylesPipe.prototype.transform = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        /** @type {?} */\n        var lookup = {\n            '100': 'Thin',\n            '200': 'Extra-Light',\n            '300': 'Light',\n            '400': 'Regular',\n            '500': 'Medium',\n            '600': 'Semi-bold',\n            '700': 'Bold',\n            '800': 'Extra-bold',\n            '900': 'Black'\n        };\n        for (var style in lookup) {\n            /** @type {?} */\n            var found = value && value.search(style);\n            if (found >= 0 && value != null) {\n                value = value.replace(style, lookup[style] + ' ');\n                break;\n            }\n        }\n        return value;\n    };\n    FontStylesPipe.decorators = [\n        { type: Pipe, args: [{\n                    name: 'FontStyles',\n                    pure: true\n                },] }\n    ];\n    return FontStylesPipe;\n}());\nvar StatefulSlicePipe = /** @class */ (function () {\n    function StatefulSlicePipe() {\n        this.slicedArray = [];\n        this.previousArrayRef = [];\n        this.previousEndValue = 0;\n    }\n    /**\n     * @param {?} arr\n     * @param {?} start\n     * @param {?} end\n     * @return {?}\n     */\n    StatefulSlicePipe.prototype.transform = /**\n     * @param {?} arr\n     * @param {?} start\n     * @param {?} end\n     * @return {?}\n     */\n    function (arr, start, end) {\n        if (arr && (this.previousEndValue !== end || this.previousArrayRef !== arr)) {\n            this.slicedArray = arr.slice(start, end);\n            this.previousArrayRef = arr;\n            this.previousEndValue = end;\n        }\n        return this.slicedArray || arr;\n    };\n    StatefulSlicePipe.decorators = [\n        { type: Pipe, args: [{\n                    name: 'StatefulSlice',\n                    pure: false\n                },] }\n    ];\n    return StatefulSlicePipe;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar FontPickerModule = /** @class */ (function () {\n    function FontPickerModule() {\n    }\n    FontPickerModule.decorators = [\n        { type: NgModule, args: [{\n                    entryComponents: [FontPickerComponent],\n                    declarations: [FontPickerComponent, FontPickerDirective, FontSizePipe, FontStylesPipe, StatefulSlicePipe],\n                    imports: [CommonModule, HttpClientModule, FormsModule, ReactiveFormsModule, PerfectScrollbarModule],\n                    exports: [FormsModule, ReactiveFormsModule, FontPickerDirective, FontSizePipe, FontStylesPipe, StatefulSlicePipe],\n                    providers: [FontPickerService]\n                },] }\n    ];\n    return FontPickerModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { FONT_PICKER_CONFIG, Font, FontPickerComponent, FontPickerConfig, FontPickerDirective, FontPickerModule, FontPickerService, FontSizePipe, FontStylesPipe, GoogleFontsInterface, StatefulSlicePipe };\n//# sourceMappingURL=ngx-font-picker.es5.js.map\n","import { FontPickerConfigInterface } from 'ngx-font-picker';\nvar DEFAULT_FONT_PICKER_CONFIG = {\n    // Change this to your Google API key\n    apiKey: 'AIzaSyA9S7DY0khhn9JYcfyRWb1F6Rd2rwtF_mA'\n};\nvar Éµ0 = DEFAULT_FONT_PICKER_CONFIG;\nvar AppModule = /** @class */ (function () {\n    function AppModule() {\n    }\n    return AppModule;\n}());\nexport { AppModule };\nexport { Éµ0 };\n","import { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { FONT_PICKER_CONFIG } from 'ngx-font-picker';\nimport { FontPickerModule, FontPickerConfigInterface } from 'ngx-font-picker';\n\nimport { AppComponent } from './app.component';\n\nconst DEFAULT_FONT_PICKER_CONFIG: FontPickerConfigInterface = {\n  // Change this to your Google API key\n  apiKey: 'AIzaSyA9S7DY0khhn9JYcfyRWb1F6Rd2rwtF_mA'\n};\n\n@NgModule({\n    bootstrap: [\n      AppComponent\n    ],\n    declarations: [\n      AppComponent\n    ],\n    imports: [\n      BrowserModule,\n      FormsModule,\n      FlexLayoutModule,\n      ReactiveFormsModule,\n      FontPickerModule\n    ],\n    exports: [\n    ],\n    providers: [\n      {\n        provide: FONT_PICKER_CONFIG,\n        useValue: DEFAULT_FONT_PICKER_CONFIG\n      }\n    ]\n})\nexport class AppModule {}\n","import { Component } from '@angular/core';\n\nimport { Font } from 'ngx-font-picker';\n\n@Component({\n  selector: 'my-app',\n  moduleId: 'src/app/app.component',\n  templateUrl: 'app.component.html',\n  styleUrls: [ 'app.component.css' ]\n})\nexport class AppComponent {\n  private _presetFonts = ['Arial', 'Times', 'Courier', 'Lato', 'Open Sans', 'Roboto Slab'];\n\n  public font: Font = new Font({\n    family: 'Roboto',\n    size: '14px',\n    style: 'regular',\n    styles: ['regular']\n  });\n\n  public sizeSelect: boolean = true;\n  public styleSelect: boolean = true;\n\n  public presetFonts = this._presetFonts;\n\n  constructor() {}\n\n  public togglePresetFonts(): void {\n    this.presetFonts = this.presetFonts.length ? [] : this._presetFonts;\n  }\n\n  public toggleExtraOptions(): void {\n    this.sizeSelect = !this.sizeSelect;\n    this.styleSelect = !this.styleSelect;\n  }\n}\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./app.component.css.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"ngx-font-picker\";\nimport * as i3 from \"@angular/flex-layout/flex\";\nimport * as i4 from \"@angular/flex-layout/core\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/flex-layout/extended\";\nimport * as i7 from \"@angular/platform-browser\";\nimport * as i8 from \"./app.component\";\nvar styles_AppComponent = [i0.styles];\nvar RenderType_AppComponent = i1.Éµcrt({ encapsulation: 0, styles: styles_AppComponent, data: {} });\nexport { RenderType_AppComponent as RenderType_AppComponent };\nexport function View_AppComponent_0(_l) { return i1.Éµvid(0, [i1.Éµpid(0, i2.FontStylesPipe, []), (_l()(), i1.Éµeld(1, 0, null, null, 54, \"div\", [[\"class\", \"box-container\"], [\"fxLayout\", \"column\"]], null, null, null, null, null)), i1.Éµdid(2, 671744, null, 0, i3.DefaultLayoutDirective, [i1.ElementRef, i4.StyleUtils, [2, i3.LayoutStyleBuilder], i4.MediaMarshaller], { fxLayout: [0, \"fxLayout\"] }, null), i1.Éµprd(512, null, i5.ÉµNgStyleImpl, i5.ÉµNgStyleR2Impl, [i1.ElementRef, i1.KeyValueDiffers, i1.Renderer2]), i1.Éµdid(4, 933888, null, 0, i6.DefaultStyleDirective, [i1.ElementRef, i4.StyleUtils, i4.MediaMarshaller, i5.ÉµNgStyleImpl, i7.DomSanitizer, [8, null], [2, i4.SERVER_TOKEN], i1.PLATFORM_ID], { \"ngStyle.lt-sm\": [0, \"ngStyle.lt-sm\"] }, null), (_l()(), i1.Éµeld(5, 0, null, null, 1, \"div\", [[\"class\", \"app-title\"]], null, null, null, null, null)), (_l()(), i1.Éµted(-1, null, [\"Simple example app for the ngx-font-picker\"])), (_l()(), i1.Éµeld(7, 0, null, null, 1, \"div\", [[\"class\", \"info-container\"]], null, null, null, null, null)), (_l()(), i1.Éµted(-1, null, [\" You can select a font by clicking the first button and toggle the config options from the two other buttons. \"])), (_l()(), i1.Éµeld(9, 0, null, null, 46, \"div\", [[\"class\", \"horizontal-container\"], [\"fxFlex\", \"\"], [\"fxLayout\", \"column\"], [\"fxLayout.gt-xs\", \"row\"], [\"fxLayoutAlign\", \"stretch\"]], null, null, null, null, null)), i1.Éµdid(10, 671744, null, 0, i3.DefaultLayoutDirective, [i1.ElementRef, i4.StyleUtils, [2, i3.LayoutStyleBuilder], i4.MediaMarshaller], { fxLayout: [0, \"fxLayout\"], \"fxLayout.gt-xs\": [1, \"fxLayout.gt-xs\"] }, null), i1.Éµdid(11, 671744, null, 0, i3.DefaultLayoutAlignDirective, [i1.ElementRef, i4.StyleUtils, [2, i3.LayoutAlignStyleBuilder], i4.MediaMarshaller], { fxLayoutAlign: [0, \"fxLayoutAlign\"] }, null), i1.Éµdid(12, 671744, null, 0, i3.DefaultFlexDirective, [i1.ElementRef, i4.StyleUtils, i4.LAYOUT_CONFIG, i3.FlexStyleBuilder, i4.MediaMarshaller], { fxFlex: [0, \"fxFlex\"] }, null), (_l()(), i1.Éµeld(13, 0, null, null, 26, \"div\", [[\"class\", \"vertical-container\"], [\"fxFlex\", \"50%\"], [\"fxLayout\", \"column\"], [\"fxLayoutAlign\", \"stretch\"]], null, null, null, null, null)), i1.Éµdid(14, 671744, null, 0, i3.DefaultLayoutDirective, [i1.ElementRef, i4.StyleUtils, [2, i3.LayoutStyleBuilder], i4.MediaMarshaller], { fxLayout: [0, \"fxLayout\"] }, null), i1.Éµdid(15, 671744, null, 0, i3.DefaultLayoutAlignDirective, [i1.ElementRef, i4.StyleUtils, [2, i3.LayoutAlignStyleBuilder], i4.MediaMarshaller], { fxLayoutAlign: [0, \"fxLayoutAlign\"] }, null), i1.Éµdid(16, 671744, null, 0, i3.DefaultFlexDirective, [i1.ElementRef, i4.StyleUtils, i4.LAYOUT_CONFIG, i3.FlexStyleBuilder, i4.MediaMarshaller], { fxFlex: [0, \"fxFlex\"] }, null), (_l()(), i1.Éµeld(17, 0, null, null, 1, \"div\", [[\"class\", \"box-title\"]], null, null, null, null, null)), (_l()(), i1.Éµted(-1, null, [\"Settings\"])), (_l()(), i1.Éµeld(19, 0, null, null, 20, \"div\", [[\"class\", \"action-container\"], [\"fxFlex\", \"\"], [\"fxLayout\", \"column\"], [\"fxLayoutAlign\", \"stretch\"]], null, null, null, null, null)), i1.Éµdid(20, 671744, null, 0, i3.DefaultLayoutDirective, [i1.ElementRef, i4.StyleUtils, [2, i3.LayoutStyleBuilder], i4.MediaMarshaller], { fxLayout: [0, \"fxLayout\"] }, null), i1.Éµdid(21, 671744, null, 0, i3.DefaultLayoutAlignDirective, [i1.ElementRef, i4.StyleUtils, [2, i3.LayoutAlignStyleBuilder], i4.MediaMarshaller], { fxLayoutAlign: [0, \"fxLayoutAlign\"] }, null), i1.Éµdid(22, 671744, null, 0, i3.DefaultFlexDirective, [i1.ElementRef, i4.StyleUtils, i4.LAYOUT_CONFIG, i3.FlexStyleBuilder, i4.MediaMarshaller], { fxFlex: [0, \"fxFlex\"] }, null), (_l()(), i1.Éµeld(23, 16777216, null, null, 6, \"div\", [[\"class\", \"action-button\"], [\"fxFlex\", \"\"], [\"fxLayout\", \"column\"], [\"fxLayoutAlign\", \"center center\"]], null, [[null, \"fontPickerChange\"], [null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (i1.Éµnov(_v, 27).onClick() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"fontPickerChange\" === en)) {\n        var pd_1 = ((_co.font = $event) !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, null, null)), i1.Éµdid(24, 671744, null, 0, i3.DefaultLayoutDirective, [i1.ElementRef, i4.StyleUtils, [2, i3.LayoutStyleBuilder], i4.MediaMarshaller], { fxLayout: [0, \"fxLayout\"] }, null), i1.Éµdid(25, 671744, null, 0, i3.DefaultLayoutAlignDirective, [i1.ElementRef, i4.StyleUtils, [2, i3.LayoutAlignStyleBuilder], i4.MediaMarshaller], { fxLayoutAlign: [0, \"fxLayoutAlign\"] }, null), i1.Éµdid(26, 671744, null, 0, i3.DefaultFlexDirective, [i1.ElementRef, i4.StyleUtils, i4.LAYOUT_CONFIG, i3.FlexStyleBuilder, i4.MediaMarshaller], { fxFlex: [0, \"fxFlex\"] }, null), i1.Éµdid(27, 606208, null, 0, i2.FontPickerDirective, [i1.Injector, i1.ComponentFactoryResolver, i1.ApplicationRef, i1.ViewContainerRef, i1.ElementRef, i1.ChangeDetectorRef, i2.FontPickerService], { fontPicker: [0, \"fontPicker\"], fpWidth: [1, \"fpWidth\"], fpPresetLabel: [2, \"fpPresetLabel\"], fpPresetFonts: [3, \"fpPresetFonts\"], fpSizeSelect: [4, \"fpSizeSelect\"], fpStyleSelect: [5, \"fpStyleSelect\"], fpPosition: [6, \"fpPosition\"], fpPositionOffset: [7, \"fpPositionOffset\"], fpPositionRelativeToArrow: [8, \"fpPositionRelativeToArrow\"] }, { fontPickerChange: \"fontPickerChange\" }), (_l()(), i1.Éµted(28, null, [\" \", \" \", \" \", \" \"])), i1.Éµppd(29, 1), (_l()(), i1.Éµeld(30, 0, null, null, 4, \"div\", [[\"class\", \"action-button\"], [\"fxFlex\", \"\"], [\"fxLayout\", \"column\"], [\"fxLayoutAlign\", \"center center\"]], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.togglePresetFonts() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i1.Éµdid(31, 671744, null, 0, i3.DefaultLayoutDirective, [i1.ElementRef, i4.StyleUtils, [2, i3.LayoutStyleBuilder], i4.MediaMarshaller], { fxLayout: [0, \"fxLayout\"] }, null), i1.Éµdid(32, 671744, null, 0, i3.DefaultLayoutAlignDirective, [i1.ElementRef, i4.StyleUtils, [2, i3.LayoutAlignStyleBuilder], i4.MediaMarshaller], { fxLayoutAlign: [0, \"fxLayoutAlign\"] }, null), i1.Éµdid(33, 671744, null, 0, i3.DefaultFlexDirective, [i1.ElementRef, i4.StyleUtils, i4.LAYOUT_CONFIG, i3.FlexStyleBuilder, i4.MediaMarshaller], { fxFlex: [0, \"fxFlex\"] }, null), (_l()(), i1.Éµted(34, null, [\"Preset fonts: \", \"\"])), (_l()(), i1.Éµeld(35, 0, null, null, 4, \"div\", [[\"class\", \"action-button\"], [\"fxFlex\", \"\"], [\"fxLayout\", \"column\"], [\"fxLayoutAlign\", \"center center\"]], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.toggleExtraOptions() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i1.Éµdid(36, 671744, null, 0, i3.DefaultLayoutDirective, [i1.ElementRef, i4.StyleUtils, [2, i3.LayoutStyleBuilder], i4.MediaMarshaller], { fxLayout: [0, \"fxLayout\"] }, null), i1.Éµdid(37, 671744, null, 0, i3.DefaultLayoutAlignDirective, [i1.ElementRef, i4.StyleUtils, [2, i3.LayoutAlignStyleBuilder], i4.MediaMarshaller], { fxLayoutAlign: [0, \"fxLayoutAlign\"] }, null), i1.Éµdid(38, 671744, null, 0, i3.DefaultFlexDirective, [i1.ElementRef, i4.StyleUtils, i4.LAYOUT_CONFIG, i3.FlexStyleBuilder, i4.MediaMarshaller], { fxFlex: [0, \"fxFlex\"] }, null), (_l()(), i1.Éµted(39, null, [\"Style & size: \", \"\"])), (_l()(), i1.Éµeld(40, 0, null, null, 15, \"div\", [[\"class\", \"vertical-container\"], [\"fxFlex\", \"50%\"], [\"fxLayout\", \"column\"], [\"fxLayoutAlign\", \"stretch\"]], null, null, null, null, null)), i1.Éµdid(41, 671744, null, 0, i3.DefaultLayoutDirective, [i1.ElementRef, i4.StyleUtils, [2, i3.LayoutStyleBuilder], i4.MediaMarshaller], { fxLayout: [0, \"fxLayout\"] }, null), i1.Éµdid(42, 671744, null, 0, i3.DefaultLayoutAlignDirective, [i1.ElementRef, i4.StyleUtils, [2, i3.LayoutAlignStyleBuilder], i4.MediaMarshaller], { fxLayoutAlign: [0, \"fxLayoutAlign\"] }, null), i1.Éµdid(43, 671744, null, 0, i3.DefaultFlexDirective, [i1.ElementRef, i4.StyleUtils, i4.LAYOUT_CONFIG, i3.FlexStyleBuilder, i4.MediaMarshaller], { fxFlex: [0, \"fxFlex\"] }, null), (_l()(), i1.Éµeld(44, 0, null, null, 1, \"div\", [[\"class\", \"box-title\"]], null, null, null, null, null)), (_l()(), i1.Éµted(-1, null, [\"Preview\"])), (_l()(), i1.Éµeld(46, 0, null, null, 9, \"div\", [[\"class\", \"content-container\"], [\"fxFlex\", \"\"], [\"fxLayout\", \"column\"], [\"fxLayoutAlign\", \"stretch\"]], null, null, null, null, null)), i1.Éµdid(47, 671744, null, 0, i3.DefaultLayoutDirective, [i1.ElementRef, i4.StyleUtils, [2, i3.LayoutStyleBuilder], i4.MediaMarshaller], { fxLayout: [0, \"fxLayout\"] }, null), i1.Éµdid(48, 671744, null, 0, i3.DefaultLayoutAlignDirective, [i1.ElementRef, i4.StyleUtils, [2, i3.LayoutAlignStyleBuilder], i4.MediaMarshaller], { fxLayoutAlign: [0, \"fxLayoutAlign\"] }, null), i1.Éµdid(49, 671744, null, 0, i3.DefaultFlexDirective, [i1.ElementRef, i4.StyleUtils, i4.LAYOUT_CONFIG, i3.FlexStyleBuilder, i4.MediaMarshaller], { fxFlex: [0, \"fxFlex\"] }, null), (_l()(), i1.Éµeld(50, 0, null, null, 5, \"div\", [], null, null, null, null, null)), i1.Éµprd(512, null, i5.ÉµNgStyleImpl, i5.ÉµNgStyleR2Impl, [i1.ElementRef, i1.KeyValueDiffers, i1.Renderer2]), i1.Éµdid(52, 278528, null, 0, i5.NgStyle, [i5.ÉµNgStyleImpl], { ngStyle: [0, \"ngStyle\"] }, null), i1.Éµdid(53, 933888, null, 0, i6.DefaultStyleDirective, [i1.ElementRef, i4.StyleUtils, i4.MediaMarshaller, i5.ÉµNgStyleImpl, i7.DomSanitizer, [6, i5.NgStyle], [2, i4.SERVER_TOKEN], i1.PLATFORM_ID], { ngStyle: [0, \"ngStyle\"] }, null), (_l()(), i1.Éµeld(54, 0, null, null, 1, \"div\", [[\"class\", \"preview-content\"]], null, null, null, null, null)), (_l()(), i1.Éµted(-1, null, [\" Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Sed posuere interdum sem. Quisque ligula eros ullamcorper quis, lacinia quis facilisis sed sapien. Mauris varius diam vitae arcu. Sed arcu lectus auctor vitae, consectetuer et venenatis eget velit. Sed augue orci, lacinia eu tincidunt et eleifend nec lacus. Donec ultricies nisl ut felis, suspendisse potenti. Lorem ipsum ligula ut hendrerit mollis, ipsum erat vehicula risus, eu suscipit sem libero nec erat. Aliquam erat volutpat. Sed congue augue vitae neque. Nulla consectetuer porttitor pede. Fusce purus morbi tortor magna condimentum vel, placerat id blandit sit amet tortor. \"]))], function (_ck, _v) { var _co = _v.component; var currVal_0 = \"column\"; _ck(_v, 2, 0, currVal_0); var currVal_1 = \"min-height: 800px;\"; _ck(_v, 4, 0, currVal_1); var currVal_2 = \"column\"; var currVal_3 = \"row\"; _ck(_v, 10, 0, currVal_2, currVal_3); var currVal_4 = \"stretch\"; _ck(_v, 11, 0, currVal_4); var currVal_5 = \"\"; _ck(_v, 12, 0, currVal_5); var currVal_6 = \"column\"; _ck(_v, 14, 0, currVal_6); var currVal_7 = \"stretch\"; _ck(_v, 15, 0, currVal_7); var currVal_8 = \"50%\"; _ck(_v, 16, 0, currVal_8); var currVal_9 = \"column\"; _ck(_v, 20, 0, currVal_9); var currVal_10 = \"stretch\"; _ck(_v, 21, 0, currVal_10); var currVal_11 = \"\"; _ck(_v, 22, 0, currVal_11); var currVal_12 = \"column\"; _ck(_v, 24, 0, currVal_12); var currVal_13 = \"center center\"; _ck(_v, 25, 0, currVal_13); var currVal_14 = \"\"; _ck(_v, 26, 0, currVal_14); var currVal_15 = _co.font; var currVal_16 = \"auto\"; var currVal_17 = \"Preset fonts\"; var currVal_18 = _co.presetFonts; var currVal_19 = _co.sizeSelect; var currVal_20 = _co.styleSelect; var currVal_21 = \"bottom\"; var currVal_22 = \"0%\"; var currVal_23 = false; _ck(_v, 27, 0, currVal_15, currVal_16, currVal_17, currVal_18, currVal_19, currVal_20, currVal_21, currVal_22, currVal_23); var currVal_27 = \"column\"; _ck(_v, 31, 0, currVal_27); var currVal_28 = \"center center\"; _ck(_v, 32, 0, currVal_28); var currVal_29 = \"\"; _ck(_v, 33, 0, currVal_29); var currVal_31 = \"column\"; _ck(_v, 36, 0, currVal_31); var currVal_32 = \"center center\"; _ck(_v, 37, 0, currVal_32); var currVal_33 = \"\"; _ck(_v, 38, 0, currVal_33); var currVal_35 = \"column\"; _ck(_v, 41, 0, currVal_35); var currVal_36 = \"stretch\"; _ck(_v, 42, 0, currVal_36); var currVal_37 = \"50%\"; _ck(_v, 43, 0, currVal_37); var currVal_38 = \"column\"; _ck(_v, 47, 0, currVal_38); var currVal_39 = \"stretch\"; _ck(_v, 48, 0, currVal_39); var currVal_40 = \"\"; _ck(_v, 49, 0, currVal_40); var currVal_41 = ((_co.font == null) ? null : _co.font.getStyles()); _ck(_v, 52, 0, currVal_41); var currVal_42 = ((_co.font == null) ? null : _co.font.getStyles()); _ck(_v, 53, 0, currVal_42); }, function (_ck, _v) { var _co = _v.component; var currVal_24 = ((_co.font == null) ? null : _co.font.family); var currVal_25 = i1.Éµunv(_v, 28, 1, _ck(_v, 29, 0, i1.Éµnov(_v, 0), ((_co.font == null) ? null : _co.font.style))); var currVal_26 = ((_co.font == null) ? null : _co.font.size); _ck(_v, 28, 0, currVal_24, currVal_25, currVal_26); var currVal_30 = (_co.presetFonts.length ? \"ON\" : \"OFF\"); _ck(_v, 34, 0, currVal_30); var currVal_34 = ((_co.sizeSelect || _co.styleSelect) ? \"ON\" : \"OFF\"); _ck(_v, 39, 0, currVal_34); }); }\nexport function View_AppComponent_Host_0(_l) { return i1.Éµvid(0, [(_l()(), i1.Éµeld(0, 0, null, null, 1, \"my-app\", [], null, null, null, View_AppComponent_0, RenderType_AppComponent)), i1.Éµdid(1, 49152, null, 0, i8.AppComponent, [], null, null)], null, null); }\nvar AppComponentNgFactory = i1.Éµccf(\"my-app\", i8.AppComponent, View_AppComponent_Host_0, {}, {}, []);\nexport { AppComponentNgFactory as AppComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\".app-title[_ngcontent-%COMP%]{font-size:24px}.box-title[_ngcontent-%COMP%]{font-size:20px}.box-container[_ngcontent-%COMP%]{box-sizing:border-box;width:800px;height:500px;max-width:90%;max-height:90%;padding:24px;margin:24px auto;border-radius:4px;color:#555;background-color:#eee;box-shadow:0 6px 20px rgba(0,0,0,.18),0 6px 6px rgba(0,0,0,.25)}.info-container[_ngcontent-%COMP%]{padding:12px 16px;line-height:24px}.action-container[_ngcontent-%COMP%], .content-container[_ngcontent-%COMP%]{overflow:auto;height:300px;min-height:0;padding:16px 24px;margin:8px 16px;border-radius:4px;background-color:#fff}.action-button[_ngcontent-%COMP%]{box-sizing:border-box;width:100%;padding:16px;margin:8px 0;border:1px solid #555;border-radius:4px;cursor:pointer;font-size:14px;font-weight:700;text-align:center}.action-button[_ngcontent-%COMP%]:hover{color:#fff;background-color:#555}.preview-content[_ngcontent-%COMP%]{line-height:1.3;color:#888}\\n/*# sourceMappingURL=app.component.css.map*/\"];\nexport { styles as styles };\n","<div class=\"box-container\" fxLayout=\"column\" [ngStyle.lt-sm]=\"'min-height: 800px;'\">\n  <div class=\"app-title\">Simple example app for the ngx-font-picker</div>\n\n  <div class=\"info-container\">\n    You can select a font by clicking the first button and toggle the config options from the two other buttons.\n  </div>\n\n  <div class=\"horizontal-container\" fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutAlign=\"stretch\" fxFlex>\n    <div class=\"vertical-container\" fxLayout=\"column\" fxLayoutAlign=\"stretch\" fxFlex=\"50%\">\n      <div class=\"box-title\">Settings</div>\n\n      <div class=\"action-container\" fxLayout=\"column\" fxLayoutAlign=\"stretch\" fxFlex>\n        <div class=\"action-button\" fxLayout=\"column\" fxLayoutAlign=\"center center\" fxFlex [(fontPicker)]=\"font\" [fpWidth]=\"'auto'\" [fpPosition]=\"'bottom'\" [fpPositionOffset]=\"'0%'\" [fpPositionRelativeToArrow]=\"false\" [fpPresetLabel]=\"'Preset fonts'\" [fpPresetFonts]=\"presetFonts\" [fpSizeSelect]=\"sizeSelect\" [fpStyleSelect]=\"styleSelect\">\n          {{font?.family}} {{font?.style | FontStyles}} {{font?.size}}\n        </div>\n\n        <div class=\"action-button\" fxLayout=\"column\" fxLayoutAlign=\"center center\" fxFlex (click)=\"togglePresetFonts()\">Preset fonts: {{presetFonts.length ? \"ON\" : \"OFF\"}}</div>\n\n        <div class=\"action-button\" fxLayout=\"column\" fxLayoutAlign=\"center center\" fxFlex (click)=\"toggleExtraOptions()\">Style & size: {{(sizeSelect || styleSelect) ? \"ON\" : \"OFF\"}}</div>\n      </div>\n    </div>\n\n    <div class=\"vertical-container\" fxLayout=\"column\" fxLayoutAlign=\"stretch\" fxFlex=\"50%\">\n      <div class=\"box-title\">Preview</div>\n\n      <div class=\"content-container\" fxLayout=\"column\" fxLayoutAlign=\"stretch\" fxFlex>\n        <div [ngStyle]=\"font?.getStyles()\">\n          <div class=\"preview-content\">\n            Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Sed posuere interdum sem. Quisque ligula eros ullamcorper quis, lacinia quis facilisis sed sapien. Mauris varius diam vitae arcu. Sed arcu lectus auctor vitae, consectetuer et venenatis eget velit. Sed augue orci, lacinia eu tincidunt et eleifend nec lacus. Donec ultricies nisl ut felis, suspendisse potenti. Lorem ipsum ligula ut hendrerit mollis, ipsum erat vehicula risus, eu suscipit sem libero nec erat. Aliquam erat volutpat. Sed congue augue vitae neque. Nulla consectetuer porttitor pede. Fusce purus morbi tortor magna condimentum vel, placerat id blandit sit amet tortor.\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./app.module\";\nimport * as i2 from \"./app.component\";\nimport * as i3 from \"../../node_modules/ngx-font-picker/dist/ngx-font-picker.ngfactory\";\nimport * as i4 from \"./app.component.ngfactory\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/platform-browser\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"@angular/flex-layout/core\";\nimport * as i9 from \"@angular/common/http\";\nimport * as i10 from \"ngx-font-picker\";\nimport * as i11 from \"@angular/cdk/bidi\";\nimport * as i12 from \"@angular/flex-layout/flex\";\nimport * as i13 from \"@angular/flex-layout/extended\";\nimport * as i14 from \"@angular/flex-layout/grid\";\nimport * as i15 from \"@angular/flex-layout\";\nimport * as i16 from \"ngx-perfect-scrollbar\";\nvar AppModuleNgFactory = i0.Éµcmf(i1.AppModule, [i2.AppComponent], function (_l) { return i0.Éµmod([i0.Éµmpd(512, i0.ComponentFactoryResolver, i0.ÉµCodegenComponentFactoryResolver, [[8, [i3.FontPickerComponentNgFactory, i4.AppComponentNgFactory]], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.Éµmpd(5120, i0.LOCALE_ID, i0.Éµangular_packages_core_core_q, [[3, i0.LOCALE_ID]]), i0.Éµmpd(4608, i5.NgLocalization, i5.NgLocaleLocalization, [i0.LOCALE_ID, [2, i5.Éµangular_packages_common_common_a]]), i0.Éµmpd(5120, i0.Éµangular_packages_core_core_bb, i0.Éµangular_packages_core_core_s, [i0.NgZone]), i0.Éµmpd(4608, i0.Compiler, i0.Compiler, []), i0.Éµmpd(5120, i0.APP_ID, i0.Éµangular_packages_core_core_f, []), i0.Éµmpd(5120, i0.IterableDiffers, i0.Éµangular_packages_core_core_o, []), i0.Éµmpd(5120, i0.KeyValueDiffers, i0.Éµangular_packages_core_core_p, []), i0.Éµmpd(4608, i6.DomSanitizer, i6.ÉµDomSanitizerImpl, [i5.DOCUMENT]), i0.Éµmpd(6144, i0.Sanitizer, null, [i6.DomSanitizer]), i0.Éµmpd(4608, i6.HAMMER_GESTURE_CONFIG, i6.HammerGestureConfig, []), i0.Éµmpd(5120, i6.EVENT_MANAGER_PLUGINS, function (p0_0, p0_1, p0_2, p1_0, p2_0, p2_1, p2_2, p2_3) { return [new i6.ÉµDomEventsPlugin(p0_0, p0_1, p0_2), new i6.ÉµKeyEventsPlugin(p1_0), new i6.ÉµHammerGesturesPlugin(p2_0, p2_1, p2_2, p2_3)]; }, [i5.DOCUMENT, i0.NgZone, i0.PLATFORM_ID, i5.DOCUMENT, i5.DOCUMENT, i6.HAMMER_GESTURE_CONFIG, i0.ÉµConsole, [2, i6.HAMMER_LOADER]]), i0.Éµmpd(4608, i6.EventManager, i6.EventManager, [i6.EVENT_MANAGER_PLUGINS, i0.NgZone]), i0.Éµmpd(135680, i6.ÉµDomSharedStylesHost, i6.ÉµDomSharedStylesHost, [i5.DOCUMENT]), i0.Éµmpd(4608, i6.ÉµDomRendererFactory2, i6.ÉµDomRendererFactory2, [i6.EventManager, i6.ÉµDomSharedStylesHost, i0.APP_ID]), i0.Éµmpd(6144, i0.RendererFactory2, null, [i6.ÉµDomRendererFactory2]), i0.Éµmpd(6144, i6.ÉµSharedStylesHost, null, [i6.ÉµDomSharedStylesHost]), i0.Éµmpd(4608, i0.Testability, i0.Testability, [i0.NgZone]), i0.Éµmpd(4608, i7.Éµangular_packages_forms_forms_o, i7.Éµangular_packages_forms_forms_o, []), i0.Éµmpd(5120, i0.APP_BOOTSTRAP_LISTENER, function (p0_0, p0_1) { return [i8.removeStyles(p0_0, p0_1)]; }, [i5.DOCUMENT, i0.PLATFORM_ID]), i0.Éµmpd(4608, i7.FormBuilder, i7.FormBuilder, []), i0.Éµmpd(4608, i9.HttpXsrfTokenExtractor, i9.Éµangular_packages_common_http_http_g, [i5.DOCUMENT, i0.PLATFORM_ID, i9.Éµangular_packages_common_http_http_e]), i0.Éµmpd(4608, i9.Éµangular_packages_common_http_http_h, i9.Éµangular_packages_common_http_http_h, [i9.HttpXsrfTokenExtractor, i9.Éµangular_packages_common_http_http_f]), i0.Éµmpd(5120, i9.HTTP_INTERCEPTORS, function (p0_0) { return [p0_0]; }, [i9.Éµangular_packages_common_http_http_h]), i0.Éµmpd(4608, i9.Éµangular_packages_common_http_http_d, i9.Éµangular_packages_common_http_http_d, []), i0.Éµmpd(6144, i9.XhrFactory, null, [i9.Éµangular_packages_common_http_http_d]), i0.Éµmpd(4608, i9.HttpXhrBackend, i9.HttpXhrBackend, [i9.XhrFactory]), i0.Éµmpd(6144, i9.HttpBackend, null, [i9.HttpXhrBackend]), i0.Éµmpd(4608, i9.HttpHandler, i9.ÉµHttpInterceptingHandler, [i9.HttpBackend, i0.Injector]), i0.Éµmpd(4608, i9.HttpClient, i9.HttpClient, [i9.HttpHandler]), i0.Éµmpd(4608, i10.FontPickerService, i10.FontPickerService, [i9.HttpClient, i10.FONT_PICKER_CONFIG]), i0.Éµmpd(1073742336, i5.CommonModule, i5.CommonModule, []), i0.Éµmpd(1024, i0.ErrorHandler, i6.Éµangular_packages_platform_browser_platform_browser_a, []), i0.Éµmpd(1024, i0.APP_INITIALIZER, function (p0_0) { return [i6.Éµangular_packages_platform_browser_platform_browser_j(p0_0)]; }, [[2, i0.NgProbeToken]]), i0.Éµmpd(512, i0.ApplicationInitStatus, i0.ApplicationInitStatus, [[2, i0.APP_INITIALIZER]]), i0.Éµmpd(131584, i0.ApplicationRef, i0.ApplicationRef, [i0.NgZone, i0.ÉµConsole, i0.Injector, i0.ErrorHandler, i0.ComponentFactoryResolver, i0.ApplicationInitStatus]), i0.Éµmpd(1073742336, i0.ApplicationModule, i0.ApplicationModule, [i0.ApplicationRef]), i0.Éµmpd(1073742336, i6.BrowserModule, i6.BrowserModule, [[3, i6.BrowserModule]]), i0.Éµmpd(1073742336, i7.Éµangular_packages_forms_forms_d, i7.Éµangular_packages_forms_forms_d, []), i0.Éµmpd(1073742336, i7.FormsModule, i7.FormsModule, []), i0.Éµmpd(1073742336, i8.CoreModule, i8.CoreModule, []), i0.Éµmpd(1073742336, i11.BidiModule, i11.BidiModule, []), i0.Éµmpd(1073742336, i12.FlexModule, i12.FlexModule, []), i0.Éµmpd(1073742336, i13.ExtendedModule, i13.ExtendedModule, []), i0.Éµmpd(1073742336, i14.GridModule, i14.GridModule, []), i0.Éµmpd(1073742336, i15.FlexLayoutModule, i15.FlexLayoutModule, [[2, i8.SERVER_TOKEN], i0.PLATFORM_ID]), i0.Éµmpd(1073742336, i7.ReactiveFormsModule, i7.ReactiveFormsModule, []), i0.Éµmpd(1073742336, i9.HttpClientXsrfModule, i9.HttpClientXsrfModule, []), i0.Éµmpd(1073742336, i9.HttpClientModule, i9.HttpClientModule, []), i0.Éµmpd(1073742336, i16.PerfectScrollbarModule, i16.PerfectScrollbarModule, []), i0.Éµmpd(1073742336, i10.FontPickerModule, i10.FontPickerModule, []), i0.Éµmpd(1073742336, i1.AppModule, i1.AppModule, []), i0.Éµmpd(256, i0.ÉµAPP_ROOT, true, []), i0.Éµmpd(256, i9.Éµangular_packages_common_http_http_e, \"XSRF-TOKEN\", []), i0.Éµmpd(256, i9.Éµangular_packages_common_http_http_f, \"X-XSRF-TOKEN\", []), i0.Éµmpd(256, i10.FONT_PICKER_CONFIG, i1.Éµ0, [])]); });\nexport { AppModuleNgFactory as AppModuleNgFactory };\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"],"sourceRoot":""}